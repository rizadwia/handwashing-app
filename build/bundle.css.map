{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../HowTo.svelte",
    "../../ProgressBar.svelte",
    "../../Timer.svelte"
  ],
  "sourcesContent": [
    "<script>\nimport Timer from './components/Timer.svelte';\nimport HowTo from './components/HowTo.svelte';\n\nlet audio;\n\nfunction playAudio(e) {\n    console.log(e);\n    audio.play();\n}\n</script>\n<style>\n    h1,\n    h3 {\n        text-align: center;\n    }\n</style>\n\n<h1>Handwashing App</h1>\n\n<Timer on:timerend={playAudio} />\n\n<HowTo />\n\n<h3>\n    <a href=\"https://www.who.int/gpsc/clean_hands_protection/en/\">Picture Source</a>\n    <a href=\"https://freesound.org/people/metrostock99/sounds/345086/\">Sound Source</a>\n</h3>\n\n<audio bind:this={audio}>\n    <source src=\"sounds/oh-yeah.wav\" />\n</audio>",
    "<style>\n    img {\n        width: 100%;\n    }\n</style>\n\n<div bp=\"grid\">\n    <div bp=\"4@md\"></div>\n    <img bp=\"4@md 12@sm\" src=\"images/how_to_handwash.gif\" alt=\"How to wash your hands\" />\n    <div bp=\"4@md\"></div>\n</div>",
    "<script>\n    export let progressPercentage = 0;\n</script>\n\n<style>\n    .progress-container {\n        margin: 10px 0;\n        border: solid rgb(194, 194, 194) 1px;\n    }\n\n    .progress-bar {\n        height: 30px;\n        background-color: rgb(77, 199, 55)\n    }\n</style>\n\n<div bp=\"grid\">\n    <div bp=\"offset-5@md 4@md 12@sm\" class=\"progress-container\">\n        <div class=\"progress-bar\" style=\"width: {progressPercentage}%\">\n            <span class=\"sr-only\"></span>\n        </div>\n    </div>\n</div>\n",
    "<script>\nimport { createEventDispatcher } from 'svelte';\nimport ProgressBar from './ProgressBar.svelte';\n\nconst totalTime = 20;\nlet secondsLeft = totalTime;\nlet isDisabled = false;\nlet buttonClass = 'start';\nlet buttonLabel = 'Start';\n$: progressPercentage = 100 - 100*(secondsLeft/totalTime);\n\nconst dispatchEvent = createEventDispatcher();\n\nfunction startTimer() {\n    if(buttonLabel === 'Start') {\n        controlButton(true);\n        const timer = setInterval(() => {\n            secondsLeft -= 1;\n            if(secondsLeft === 0) {\n                clearInterval(timer);\n                controlButton(false);\n                dispatchEvent('timerend', {totalTime});\n            }\n        }, 1000);\n    } else {\n        reset();\n    }\n}\n\nfunction controlButton(disabled) {\n    isDisabled = disabled;\n    buttonClass = disabled ? 'start disabled' : 'start';\n    buttonLabel = secondsLeft === 0 ? 'Reset' : 'Start';\n}\n\nfunction reset() {\n    secondsLeft = totalTime;\n    buttonLabel = 'Start';\n}\n\n</script>\n\n<style>\n    h2 {\n        margin: 0;\n    }\n    .start {\n        background-color: rgb(154, 73, 73);\n        width: 100%;\n        margin: 10px 0;\n    }\n    .disabled {\n        background-color: rgb(192, 192, 192);\n        cursor: not-allowed;\n    }\n</style>\n\n<div bp=\"grid\">\n    <div bp=\"4@md\"></div>    \n    <h2 bp=\"4@md 12@sm\">Time Left : {secondsLeft} sec</h2>\n    <div bp=\"4@md\"></div>\n</div>\n\n<ProgressBar {progressPercentage} />\n\n<div bp=\"grid\">\n    <button bp=\"offset-5@md 4@md 12@sm\" class=\"{buttonClass}\" on:click=\"{startTimer}\" disabled=\"{isDisabled}\">{buttonLabel}</button>\n</div>"
  ],
  "names": [],
  "mappings": "AAYI,gBAAE,CACF,EAAE,cAAC,CAAC,AACA,UAAU,CAAE,MAAM,AACtB,CAAC;ACdD,GAAG,aAAC,CAAC,AACD,KAAK,CAAE,IAAI,AACf,CAAC;ACED,mBAAmB,cAAC,CAAC,AACjB,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,MAAM,CAAE,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,AACxC,CAAC,AAED,aAAa,cAAC,CAAC,AACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;IACtC,CAAC;AC8BD,EAAE,eAAC,CAAC,AACA,MAAM,CAAE,CAAC,AACb,CAAC,AACD,MAAM,eAAC,CAAC,AACJ,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAClC,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CAAC,CAAC,AAClB,CAAC,AACD,SAAS,eAAC,CAAC,AACP,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,MAAM,CAAE,WAAW,AACvB,CAAC"
}